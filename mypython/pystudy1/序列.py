"""
序列
    序列是python中最基本的一种数据结构
    数据结构是计算机中数据存储的方式
    序列用于保存一组有序的数据 所有的数据在序列当中都有一个唯一的位置(索引) 并且序列中的数据会按照添加的顺序
    来分配索引
    序列表的分类：
        可变序列: 序列中的元素可以改变
            列表 list
        不可变序列: 序列中的元素不可改变
            字符串 str
            元组（tuple）
列表
    列表是python中的一个对象
    对象（object）就是内存中专门用来存储数据的一块区域
    之前 我们学校的对象 像数值 它只能保持一个单一的数据
    列表中可以保存多个有序的数据
    列表是用来存储对象的对象
"""
# 创建列表
mylist = []  # 创建了一个空列表
print(mylist)
print(type(mylist))

# 列表中存储的数据 我们称为元素
# 我们的一个列表中 可以存储多个远程 可以在创建列表时 指定列表中的元素

mylist = [10]  # 创建一个包含一个元素的列表

print(mylist)

# 当想列表中添加多个元素时 多个元素之间使用,隔开
mylist = [1, 2, 3, 4, 5]
print(mylist)

# 列表中可以保持任意对象
mylist = [1, 'hello', [3, 4, 5], print]
print(mylist)

# 列表中的对象都会按照插入的顺序存储到列表中 第一个插入的对象保存到第一个位置  第二个插入的对象保存到第二个位置

# 获取列表中的数据 我们可以通过索引来获取列表中的元素
# 索引是元素在列表中的位置 列表中的每一个元素都有一个索引
# 索引是从0开始的 列表中的第一个位置索引为0 第二个位置索引为1 依次类推
mylist = [1, 2, 3, 4, 5]

print(mylist[2])

# 获取列表的长度
print("列表的长度为:", len(mylist))
print(f"列表的长度为:{len(mylist)}")

# 切片
# 切片指的是从现有列表中获取一个子列表

student = ['孙悟空', '猪八戒', '沙和尚', '唐僧', '蜘蛛精', '白骨精']
# 列表的索引可以是负数   如果索引是负数 则从后向前获取元素 -1表示倒数第一个 -2表示倒数第二个

"""
通过切片获取指定的元素
语法：列表[起始:结束]
    通过切片获取元素时 会包含起始位置 不包含结束位置
    做切片操作时 总会返回一个新的列表
    如果省略结束位置 则会一直切片到最后
    如果省略开始位置 则从0开始借钱
    
    列表[起始:结束:步长]

"""
#
# student.reverse()
# print(student)

sub = student[0:4]
print(sub)

sub1 = student[1:]
print(sub1)

sub2 = student[:]
print(sub2)
sub3 = student[:3]
print(sub3)

sub4 = student[0:5:2]
print(sub4)

sub5 = student[0:3:2]
print(sub5)

sub6 = student[::2]
print(sub6)


